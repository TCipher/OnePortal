@page "/change-password"
@inject OnePortal.Blazor.Services.Auth.AuthApi Api
@inject OnePortal.Blazor.Services.Auth.AuthService Auth
@using OnePortal.Blazor.Components.Common


<h1>Change Password</h1>
@if (!string.IsNullOrEmpty(error))
     {<div class="error">@error</div>}



<label>Current Password</label>
<input type="password" @bind="current" />
<PasswordInput Label="New Password" @bind-Value="next" MinLength="10" />
<label>Confirm Password</label>
<input type="password" @bind="confirm" />
<button @onclick="OnSubmit" disabled="@(busy || !valid)">Update</button>


@code {
    string current = "", next = "", confirm = ""; bool busy; string? error;
    bool valid => OnePortal.Blazor.Services.Auth.PasswordPolicy.MeetsPolicy(next, 10) && next == confirm;


    private async Task OnSubmit()
    {
        try
        {
            busy = true; error = null;
            var res = await Api.ChangePasswordAsync(new(current, next));
            if (res?.Ok == true) await Auth.ForceReloginAsync();
            else error = res?.Error ?? "Failed to change password";
        }
        catch (Exception ex) { Console.Error.WriteLine(ex); error = "Unexpected error"; }
        finally { busy = false; }
    }
}