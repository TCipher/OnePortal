// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnePortal.Infrastructure.Data;

#nullable disable

namespace OnePortal.Infrastructure.Migrations
{
    [DbContext(typeof(OnePortalDbContext))]
    partial class OnePortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnePortal.Domain.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ActorEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ActorRoleCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ActorUserId")
                        .HasColumnType("int");

                    b.Property<string>("CorrelationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PortalId")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActorUserId");

                    b.HasIndex("PortalId");

                    b.HasIndex("TimestampUtc");

                    b.HasIndex("EntityType", "EntityId");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.GlobalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("GlobalRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SUPERADMIN",
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ADMIN",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Code = "USER",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Lookups.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Lookups.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Designation", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Lookups.Nationality", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Code");

                    b.ToTable("Nationality", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Lookups.SubDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SubDepartment", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("UsedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TokenHash");

                    b.ToTable("PasswordResetTokens", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Portal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Portals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SIMS",
                            Name = "Sustainability"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EMP",
                            Name = "Exit Management"
                        },
                        new
                        {
                            Id = 3,
                            Code = "BILLING",
                            Name = "Billing"
                        },
                        new
                        {
                            Id = 4,
                            Code = "REGULATORY",
                            Name = "Regulatory"
                        },
                        new
                        {
                            Id = 5,
                            Code = "E-SERVICE",
                            Name = "E-Service"
                        },
                        new
                        {
                            Id = 6,
                            Code = "PROCURE",
                            Name = "Procurement"
                        },
                        new
                        {
                            Id = 7,
                            Code = "FIN",
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 8,
                            Code = "DIGI-DOCS",
                            Name = "Digi docs"
                        },
                        new
                        {
                            Id = 9,
                            Code = "ASSET",
                            Name = "Asset Mgt"
                        },
                        new
                        {
                            Id = 10,
                            Code = "TP",
                            Name = "Truck Park"
                        },
                        new
                        {
                            Id = 11,
                            Code = "IMG",
                            Name = "Immigration"
                        },
                        new
                        {
                            Id = 12,
                            Code = "LT",
                            Name = "Lease Tracking"
                        },
                        new
                        {
                            Id = 13,
                            Code = "VM",
                            Name = "Visitor Mgt"
                        },
                        new
                        {
                            Id = 14,
                            Code = "EF",
                            Name = "Equipment Efficiency"
                        },
                        new
                        {
                            Id = 15,
                            Code = "SES",
                            Name = "Security Excellence System"
                        },
                        new
                        {
                            Id = 16,
                            Code = "PT",
                            Name = "Project Tracking"
                        },
                        new
                        {
                            Id = 17,
                            Code = "ES",
                            Name = "Engagement Survey"
                        });
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.PortalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PortalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortalId", "Code")
                        .IsUnique();

                    b.ToTable("PortalRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1011,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 1
                        },
                        new
                        {
                            Id = 1012,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 1
                        },
                        new
                        {
                            Id = 1013,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 1
                        },
                        new
                        {
                            Id = 1021,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 2
                        },
                        new
                        {
                            Id = 1022,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 2
                        },
                        new
                        {
                            Id = 1023,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 2
                        },
                        new
                        {
                            Id = 1031,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 3
                        },
                        new
                        {
                            Id = 1032,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 3
                        },
                        new
                        {
                            Id = 1033,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 3
                        },
                        new
                        {
                            Id = 1041,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 4
                        },
                        new
                        {
                            Id = 1042,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 4
                        },
                        new
                        {
                            Id = 1043,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 4
                        },
                        new
                        {
                            Id = 1051,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 5
                        },
                        new
                        {
                            Id = 1052,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 5
                        },
                        new
                        {
                            Id = 1053,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 5
                        },
                        new
                        {
                            Id = 1061,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 6
                        },
                        new
                        {
                            Id = 1062,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 6
                        },
                        new
                        {
                            Id = 1063,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 6
                        },
                        new
                        {
                            Id = 1071,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 7
                        },
                        new
                        {
                            Id = 1072,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 7
                        },
                        new
                        {
                            Id = 1073,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 7
                        },
                        new
                        {
                            Id = 1081,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 8
                        },
                        new
                        {
                            Id = 1082,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 8
                        },
                        new
                        {
                            Id = 1083,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 8
                        },
                        new
                        {
                            Id = 1091,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 9
                        },
                        new
                        {
                            Id = 1092,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 9
                        },
                        new
                        {
                            Id = 1093,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 9
                        },
                        new
                        {
                            Id = 1101,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 10
                        },
                        new
                        {
                            Id = 1102,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 10
                        },
                        new
                        {
                            Id = 1103,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 10
                        },
                        new
                        {
                            Id = 1111,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 11
                        },
                        new
                        {
                            Id = 1112,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 11
                        },
                        new
                        {
                            Id = 1113,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 11
                        },
                        new
                        {
                            Id = 1121,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 12
                        },
                        new
                        {
                            Id = 1122,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 12
                        },
                        new
                        {
                            Id = 1123,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 12
                        },
                        new
                        {
                            Id = 1131,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 13
                        },
                        new
                        {
                            Id = 1132,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 13
                        },
                        new
                        {
                            Id = 1133,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 13
                        },
                        new
                        {
                            Id = 1141,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 14
                        },
                        new
                        {
                            Id = 1142,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 14
                        },
                        new
                        {
                            Id = 1143,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 14
                        },
                        new
                        {
                            Id = 1151,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 15
                        },
                        new
                        {
                            Id = 1152,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 15
                        },
                        new
                        {
                            Id = 1153,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 15
                        },
                        new
                        {
                            Id = 1161,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 16
                        },
                        new
                        {
                            Id = 1162,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 16
                        },
                        new
                        {
                            Id = 1163,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 16
                        },
                        new
                        {
                            Id = 1171,
                            Code = "ADMIN",
                            Name = "Admin",
                            PortalId = 17
                        },
                        new
                        {
                            Id = 1172,
                            Code = "MANAGER",
                            Name = "Manager",
                            PortalId = 17
                        },
                        new
                        {
                            Id = 1173,
                            Code = "EMPLOYEE",
                            Name = "Employee",
                            PortalId = 17
                        });
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ConsumedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TokenHash")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.UserPortalAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PortalId")
                        .HasColumnType("int");

                    b.Property<int>("PortalRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RevokedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortalId");

                    b.HasIndex("PortalRoleId");

                    b.HasIndex("UserId", "PortalId")
                        .IsUnique();

                    b.ToTable("UserPortalAccess", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.WebAuthnCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Aaguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttestationFmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CredentialId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PublicKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("SignCount")
                        .HasColumnType("bigint");

                    b.Property<string>("TransportsCsv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UserHandle")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CredentialId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("WebAuthnCredentials", (string)null);
                });

            modelBuilder.Entity("UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ALAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ALTaken")
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CLAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("CLTaken")
                        .HasColumnType("int");

                    b.Property<string>("Community")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Createddate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EmailOtpExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<short>("EmailOtpFailedCount")
                        .HasColumnType("smallint");

                    b.Property<string>("EmailOtpHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailOtpLastSentUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EngageDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Gender")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOneportalUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRSA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserUpdated")
                        .HasColumnType("bit");

                    b.Property<short?>("JobType")
                        .HasColumnType("smallint");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MfaEnrolledUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordLastChangedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("PreferredMfaMethod")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int?>("ReportingManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<short?>("SkillType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubDepartmentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserSignature")
                        .HasColumnType("varbinary(max)");

                    b.Property<short>("WorkLocation")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("NationalityId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubDepartmentId");

                    b.ToTable("UsersDetails", (string)null);
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Lookups.SubDepartment", b =>
                {
                    b.HasOne("OnePortal.Domain.Entities.Lookups.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.PasswordResetToken", b =>
                {
                    b.HasOne("UserDetails", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.PortalRole", b =>
                {
                    b.HasOne("OnePortal.Domain.Entities.Portal", "Portal")
                        .WithMany("Roles")
                        .HasForeignKey("PortalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Portal");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("UserDetails", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.UserPortalAccess", b =>
                {
                    b.HasOne("OnePortal.Domain.Entities.Portal", "Portal")
                        .WithMany("Accesses")
                        .HasForeignKey("PortalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnePortal.Domain.Entities.PortalRole", "PortalRole")
                        .WithMany("Accesses")
                        .HasForeignKey("PortalRoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UserDetails", "User")
                        .WithMany("PortalAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Portal");

                    b.Navigation("PortalRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.WebAuthnCredential", b =>
                {
                    b.HasOne("UserDetails", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserDetails", b =>
                {
                    b.HasOne("OnePortal.Domain.Entities.Lookups.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnePortal.Domain.Entities.Lookups.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OnePortal.Domain.Entities.Lookups.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OnePortal.Domain.Entities.GlobalRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OnePortal.Domain.Entities.Lookups.SubDepartment", "SubDepartment")
                        .WithMany()
                        .HasForeignKey("SubDepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Nationality");

                    b.Navigation("Role");

                    b.Navigation("SubDepartment");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.GlobalRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.Portal", b =>
                {
                    b.Navigation("Accesses");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("OnePortal.Domain.Entities.PortalRole", b =>
                {
                    b.Navigation("Accesses");
                });

            modelBuilder.Entity("UserDetails", b =>
                {
                    b.Navigation("PortalAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
